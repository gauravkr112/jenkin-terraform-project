pipeline {

parameters {
   booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
  }
enviorment {
     AWS_ACCESS_KEY_ID	= credentails('AWS_ACCESS_KEY_ID')
     AWS_SECRET_ACCESS_KEY_ID	= credentails('AWS_SECRET_ACCESS_KEY_ID')
    }
agent any
stages {
   stage('checkout') {
      steps {
         script{
            directory("terraform")
            {
              git "(repo URL)"
            }
          }
         }
       }
     }
stage('Plan') {
   steps {
    sh 'pwd;cd terraform/ ; terraform init'
    sh "pwd;cd terraform/ ; terraform plan -out tfplan"
    sh "pwd;cd terraform/ ; terraform show -no-color tfplan >tfplan.txt"
    }
  }
stage('Approval')
  when {
     not {
         equals expected: true, actual: params.autoApprove
        }
      }
    steps {
       script {
          def plan = readFile 'terraform/tfplan.txt'
          input message: "Do you want to apply the plan?",
          parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
         }
        }
      }
stage('Apply')
   steps {
      sh "pwd; cd terraform/ ; terraform apply -input-false tfplan"
     }
   }
 }
 
